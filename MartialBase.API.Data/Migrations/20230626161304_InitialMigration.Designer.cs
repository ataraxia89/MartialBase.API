// <auto-generated />
using System;
using MartialBase.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MartialBase.API.Data.Migrations
{
    [DbContext(typeof(MartialBaseDbContext))]
    [Migration("20230626161304_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LandlinePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Line2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Line3")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Art", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Arts", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.ArtGrade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArtId");

                    b.HasIndex("OrganisationId");

                    b.ToTable("ArtGrades", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountDescription")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountNo")
                        .HasColumnType("int");

                    b.Property<Guid>("AccountOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountOwnerId");

                    b.HasIndex("OrganisationId")
                        .IsUnique();

                    b.ToTable("BankAccounts", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DocumentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentURL")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FiledDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("Documents", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DefaultExpiryDays")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("DocumentTypes", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FinishDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HostingSchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("HostingSchoolId");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.EventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FinishDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LessonInstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LessonPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LessonInstructorId");

                    b.HasIndex("LessonPlanId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Lessons", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.LessonPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ArtId");

                    b.HasIndex("CreatedById");

                    b.ToTable("LessonPlans", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.LessonPlanLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<Guid>("LessonPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlanLineDetails")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LessonPlanId");

                    b.ToTable("LessonPlanLines", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.MartialBaseUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AzureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvitationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("MartialBaseUsers", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.MartialBaseUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MartialBaseUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MartialBaseUserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("MartialBaseUserRoles", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.MedicalCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("MedicalCategories", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLines", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrderLineDelivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeliveryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("QuantityDelivered")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderLineId");

                    b.ToTable("OrderLineDeliveries", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Organisation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ParentId");

                    b.ToTable("Organisations", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrganisationPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsOrganisationAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("PersonId");

                    b.ToTable("OrganisationPeople", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPaymentConfirmed")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reference")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Title")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("People", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.PersonDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonDocuments", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsService")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductRef")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ArtId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ProductCategories", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.ProductPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InstructorPrice")
                        .HasColumnType("decimal(6,2)");

                    b.Property<bool>("IsCurrentPrice")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("StudentPrice")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrices", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.RecurringLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("FinishTime")
                        .HasColumnType("time");

                    b.Property<int>("LessonDayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("RecurringLessons", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DefaultAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("HeadInstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Website")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.HasIndex("ArtId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("DefaultAddressId");

                    b.HasIndex("HeadInstructorId");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Schools", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.SchoolAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolAddresses", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.SchoolStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InsuranceDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInstructor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSecretary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("LicenceDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InsuranceDocumentId");

                    b.HasIndex("LicenceDocumentId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StudentId");

                    b.ToTable("SchoolStudents", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.SystemNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LessonPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderLineDeliveryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique()
                        .HasFilter("[EventId] IS NOT NULL");

                    b.HasIndex("LessonId")
                        .IsUnique()
                        .HasFilter("[LessonId] IS NOT NULL");

                    b.HasIndex("LessonPlanId")
                        .IsUnique()
                        .HasFilter("[LessonPlanId] IS NOT NULL");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[OrderId] IS NOT NULL");

                    b.HasIndex("OrderLineDeliveryId")
                        .IsUnique()
                        .HasFilter("[OrderLineDeliveryId] IS NOT NULL");

                    b.HasIndex("OrderLineId")
                        .IsUnique()
                        .HasFilter("[OrderLineId] IS NOT NULL");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasFilter("[ProductId] IS NOT NULL");

                    b.ToTable("SystemNotes", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CompletionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCompletionTaskItem")
                        .HasColumnType("bit");

                    b.Property<short>("ItemOrder")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskItems", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.ArtGrade", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Art", "Art")
                        .WithMany("ArtGrades")
                        .HasForeignKey("ArtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Organisation", "Organisation")
                        .WithMany("ArtGrades")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Art");

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.BankAccount", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "AccountOwner")
                        .WithMany("OwnedBankAccounts")
                        .HasForeignKey("AccountOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Organisation", "Organisation")
                        .WithOne("BankAccount")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.BankAccount", "OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountOwner");

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Document", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.DocumentType", "DocumentType")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.DocumentType", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Organisation", "Organisation")
                        .WithMany("DocumentTypes")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Event", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Address", "Address")
                        .WithMany("Events")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.School", "HostingSchool")
                        .WithMany("Events")
                        .HasForeignKey("HostingSchoolId");

                    b.Navigation("Address");

                    b.Navigation("EventType");

                    b.Navigation("HostingSchool");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Lesson", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Address", "Address")
                        .WithMany("Lessons")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "LessonInstructor")
                        .WithMany("InstructedLessons")
                        .HasForeignKey("LessonInstructorId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.LessonPlan", "LessonPlan")
                        .WithMany("Lessons")
                        .HasForeignKey("LessonPlanId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.School", "School")
                        .WithMany("Lessons")
                        .HasForeignKey("SchoolId");

                    b.Navigation("Address");

                    b.Navigation("LessonInstructor");

                    b.Navigation("LessonPlan");

                    b.Navigation("School");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.LessonPlan", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Art", "Art")
                        .WithMany("LessonPlans")
                        .HasForeignKey("ArtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "CreatedBy")
                        .WithMany("CreatedLessonPlans")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Art");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.LessonPlanLine", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.LessonPlan", "LessonPlan")
                        .WithMany("LessonPlanLines")
                        .HasForeignKey("LessonPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LessonPlan");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.MartialBaseUser", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.MartialBaseUserRole", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.MartialBaseUser", "MartialBaseUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("MartialBaseUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MartialBaseUser");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Order", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "Person")
                        .WithMany("OrdersPlaced")
                        .HasForeignKey("PersonId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.School", "School")
                        .WithMany("OrdersPlaced")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("School");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrderLine", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Product", "Product")
                        .WithMany("OrderLinesPlaced")
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrderLineDelivery", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.OrderLine", "OrderLine")
                        .WithMany("OrderLineDeliveries")
                        .HasForeignKey("OrderLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderLine");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Organisation", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Organisation", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Address");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrganisationPerson", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Organisation", "Organisation")
                        .WithMany("People")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "Person")
                        .WithMany("Organisations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Payment", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.BankAccount", "BankAccount")
                        .WithMany("Payments")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Person", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Address", "Address")
                        .WithMany("People")
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.PersonDocument", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Product", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Art", "Art")
                        .WithMany("Products")
                        .HasForeignKey("ArtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Art");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.ProductCategory", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.ProductCategory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.ProductPrice", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Product", "Product")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.RecurringLesson", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Address", "Address")
                        .WithMany("RecurringLessons")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.School", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Art", "Art")
                        .WithMany("Schools")
                        .HasForeignKey("ArtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.BankAccount", "BankAccount")
                        .WithMany("Schools")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Address", "DefaultAddress")
                        .WithMany()
                        .HasForeignKey("DefaultAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "HeadInstructor")
                        .WithMany("Schools")
                        .HasForeignKey("HeadInstructorId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Organisation", "Organisation")
                        .WithMany("Schools")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Art");

                    b.Navigation("BankAccount");

                    b.Navigation("DefaultAddress");

                    b.Navigation("HeadInstructor");

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.SchoolAddress", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Address", "Address")
                        .WithMany("Schools")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.School", "School")
                        .WithMany("SchoolAddresses")
                        .HasForeignKey("SchoolId");

                    b.Navigation("Address");

                    b.Navigation("School");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.SchoolStudent", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Document", "InsuranceDocument")
                        .WithMany()
                        .HasForeignKey("InsuranceDocumentId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Document", "LicenceDocument")
                        .WithMany()
                        .HasForeignKey("LicenceDocumentId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "Student")
                        .WithMany("StudentSchools")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceDocument");

                    b.Navigation("LicenceDocument");

                    b.Navigation("School");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.SystemNote", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Event", "Event")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "EventId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Lesson", "Lesson")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "LessonId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.LessonPlan", "LessonPlan")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "LessonPlanId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Order", "Order")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "OrderId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.OrderLineDelivery", "OrderLineDelivery")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "OrderLineDeliveryId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.OrderLine", "OrderLine")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "OrderLineId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Payment", "Payment")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "PaymentId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Product", "Product")
                        .WithOne("Notes")
                        .HasForeignKey("MartialBase.API.Data.Models.EntityFramework.SystemNote", "ProductId");

                    b.Navigation("Event");

                    b.Navigation("Lesson");

                    b.Navigation("LessonPlan");

                    b.Navigation("Order");

                    b.Navigation("OrderLine");

                    b.Navigation("OrderLineDelivery");

                    b.Navigation("Payment");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Task", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "AssignedTo")
                        .WithMany("TasksAssignedTo")
                        .HasForeignKey("AssignedToId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "CreatedBy")
                        .WithMany("TasksCreated")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.TaskItem", b =>
                {
                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Person", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("MartialBase.API.Data.Models.EntityFramework.Task", "Task")
                        .WithMany("TaskItems")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Address", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Lessons");

                    b.Navigation("People");

                    b.Navigation("RecurringLessons");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Art", b =>
                {
                    b.Navigation("ArtGrades");

                    b.Navigation("LessonPlans");

                    b.Navigation("Products");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.BankAccount", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.DocumentType", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Event", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Lesson", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.LessonPlan", b =>
                {
                    b.Navigation("LessonPlanLines");

                    b.Navigation("Lessons");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.MartialBaseUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Order", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrderLine", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("OrderLineDeliveries");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.OrderLineDelivery", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Organisation", b =>
                {
                    b.Navigation("ArtGrades");

                    b.Navigation("BankAccount");

                    b.Navigation("DocumentTypes");

                    b.Navigation("People");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Payment", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Person", b =>
                {
                    b.Navigation("CreatedLessonPlans");

                    b.Navigation("InstructedLessons");

                    b.Navigation("OrdersPlaced");

                    b.Navigation("Organisations");

                    b.Navigation("OwnedBankAccounts");

                    b.Navigation("Schools");

                    b.Navigation("StudentSchools");

                    b.Navigation("TasksAssignedTo");

                    b.Navigation("TasksCreated");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Product", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("OrderLinesPlaced");

                    b.Navigation("ProductPrices");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.School", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Lessons");

                    b.Navigation("OrdersPlaced");

                    b.Navigation("SchoolAddresses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("MartialBase.API.Data.Models.EntityFramework.Task", b =>
                {
                    b.Navigation("TaskItems");
                });
#pragma warning restore 612, 618
        }
    }
}
